# This file contains pin mappings for the stock 2020 Creality Ender 5
# Pro with the 32-bit Creality 4.2.2 board. To use this config, during
# "make menuconfig" select the STM32F103 with a "28KiB bootloader" and
# with "Use USB for communication" disabled.

# If you prefer a direct serial connection, in "make menuconfig"
# select "Enable extra low-level configuration options" and select the
# USART3 serial port, which is broken out on the 10 pin IDC cable used
# for the LCD module as follows:
# 3: Tx, 4: Rx, 9: GND, 10: VCC

# Flash this firmware by copying "out/klipper.bin" to a SD card and
# turning on the printer with the card inserted. The firmware
# filename must end in ".bin" and must not match the last filename
# that was flashed.

# See docs/Config_Reference.md for a description of parameters.

[mcu]
serial: /dev/serial/by-id/usb-1a86_USB_Serial-if00-port0
restart_method: command

[printer]
kinematics: cartesian
max_velocity: 300
max_accel: 3000
max_z_velocity: 5
max_z_accel: 100

[virtual_sdcard]
path: ~/printer_data/gcodes

[display_status]

[display]
lcd_type: st7920
cs_pin: PB12
sclk_pin: PB13
sid_pin: PB15
encoder_pins: ^PB14, ^PB10
click_pin: ^!PB2

[fan]
pin: PA0

[stepper_x]
step_pin: PC2
dir_pin: PB9
enable_pin: !PC3
rotation_distance: 40
microsteps: 16
endstop_pin: ^PA5
position_endstop: 220
position_max: 220
homing_speed: 50

[stepper_y]
step_pin: PB8
dir_pin: PB7
enable_pin: !PC3
microsteps: 16
rotation_distance: 40
endstop_pin: ^PA6
position_endstop: 220
position_max: 220
homing_speed: 50

[stepper_z]
step_pin: PB6
dir_pin: PB5
enable_pin: !PC3
microsteps: 16
rotation_distance: 4
endstop_pin: ^PA7
position_max: 300
position_endstop: 0.0

[extruder]
step_pin: PB4
dir_pin: PB3
enable_pin: !PC3
microsteps: 16
rotation_distance: 32.342
# full_steps_per_rotation:
# gear_ratio:
nozzle_diameter: 0.400
filament_diameter: 1.750
max_extrude_only_distance: 100.0
#   Maximum length (in mm of raw filament) that a retraction or extrude-only move may have.
#   If a retraction or extrude-only move requests a distance greater than this value it will
#   cause an error to be returned. The default is 50mm.
# max_extrude_cross_section:
#   Maximum area (in mm^2) of an extrusion cross section (eg, extrusion width multiplied by
#   layer height). This setting prevents excessive amounts of extrusion during relatively
#   small XY moves. If a move requests an extrusion rate that would exceed this value
#   it will cause an error to be returned. The default is: 4.0 * nozzle_diameter^2
# instantaneous_corner_velocity: 1.000
#   The maximum instantaneous velocity change (in mm/s) of the extruder during the junction
#   of two moves. The default is 1mm/s.
# max_extrude_only_velocity:
# max_extrude_only_accel:
#   Maximum velocity (in mm/s) and acceleration (in mm/s^2) of the extruder motor for
#   retractions and extrude-only moves. These settings do not have any impact on normal
#   printing moves. If not specified then they are calculated to match the limit an XY
#   printing move with a cross section of 4.0*nozzle_diameter^2 would have.
# pressure_advance: 0.0
#   The amount of raw filament to push into the extruder during extruder acceleration.
#   An equal amount of filament is retracted during deceleration. It is measured in millimeters
#   per millimeter/second. The default is 0, which disables pressure advance.
# pressure_advance_smooth_time: 0.040
#   A time range (in seconds) to use when calculating the average extruder velocity for pressure
#   advance. A larger value results in smoother extruder movements. This parameter may not exceed
#   200ms. This setting only applies if pressure_advance is non-zero. The default is 0.040 (40 ms).
###########################################################
# The remaining variables describe the [extruder] heater. #
###########################################################
heater_pin: PA1 # PWM output pin controlling the heater. Required
sensor_type: EPCOS 100K B57560G104F
#   Type of sensor - common thermistors are "EPCOS 100K B57560G104F", "ATC Semitec 104GT-2",
#   "ATC Semitec 104NT-4-R025H42G", "Generic 3950","Honeywell 100K 135-104LAG-J01",
#   "NTC 100K MGB18-104F39050L32", "SliceEngineering 450", and "TDK NTCG104LH104JT1". See the
#   "Temperature sensors" section for other sensors. Required
sensor_pin: PC5 # Analog input pin connected to the sensor. Required
control: pid    # Control algorithm (either pid or watermark). Required
pid_kp: 19.72
pid_ki: 1.4
pid_kd: 69.54
#   The proportional (pid_Kp), integral (pid_Ki), and derivative (pid_Kd) settings for the PID
#   feedback control system. Klipper evaluates the PID settings with the following general formula:
#     heater_pwm = (Kp*error + Ki*integral(error) - Kd*derivative(error)) / 255
#   Where "error" is "requested_temperature - measured_temperature" and "heater_pwm" is the
#   requested heating rate with 0.0 being full off and 1.0 being full on. Consider using the
#   PID_CALIBRATE command to obtain these parameters. The pid_Kp, pid_Ki, and pid_Kd parameters must
#   be provided for PID heaters.
min_temp: 0
max_temp: 260
#   The maximum range of valid temperatures (in Celsius) that the heater must remain within.
#   This controls a safety feature implemented in the micro-controller code - should the measured
#   temperature ever fall outside this range then the micro-controller will go into a shutdown
#   state. This check can help detect some heater and sensor hardware failures. Set this range just
#   wide enough so that reasonable temperatures do not result in an error. Required
# max_power: 1.0
#   The maximum power (value from 0.0 to 1.0) that the heater_pin may be set to.
#   The value 1.0 allows the pin to be set fully enabled for extended periods, while a value of 0.5
#   would allow the pin to be enabled for no more than half the time. This setting may be used to
#   limit the total power output (over extended periods) to the heater. Default is 1.0
# pullup_resistor: 4700
#   The resistance (ohms) of the pullup attached to the thermistor. Only valid when the sensor is
#   a thermistor. Default is 4700
# smooth_time: 1.0
#   A time value (seconds) over which temperature measurements will be smoothed to reduce the
#   impact of measurement noise. Default is 1.0
# max_delta: 2.0
#   On 'watermark' controlled heaters this is the number of degrees in Celsius above the target
#   temperature before disabling the heater as well as the number of degrees below the target before
#   re-enabling the heater. Default is 2.0
# pwm_cycle_time: 0.100
#   Time in seconds for each software PWM cycle of the heater. It is not recommended to set this
#   unless there is an electrical requirement to switch the heater faster than 10 times a second.
#   Default is 0.100.
# min_extrude_temp: 170
#   Minimum temperature (Celsius) at which extruder move commands may be issued. Default is 170

######################################################################
# [heater_bed] uses the same settings described in "extruder" section 
######################################################################
[heater_bed]
heater_pin: PA2
sensor_type: EPCOS 100K B57560G104F
sensor_pin: PC4
control: pid
pid_kp: 66.429
pid_ki: 1.197
pid_kd: 921.707
min_temp: 0
max_temp: 135

######################################################################
# Homing / BL touch / Bed Mesh
######################################################################

[safe_z_home]
home_xy_position: 117.5, 117.5
#   X and Y coordinate (e.g. 100, 100) where the Z homing should be performed. Required.
speed: 100.0
#   Speed at which the toolhead is moved to the safe Z home coordinate. Default 50 mm/s.
z_hop: 10.0
#   Distance (in mm) to lift the Z axis prior to homing. This is applied to any homing command,
#   even if it doesn't home the Z axis. If the Z axis is already homed and the current Z
#   position is less than z_hop, then this will lift the head to a height of z_hop. If the Z axis
#   is not already homed the head is lifted by z_hop. The default is to not implement Z hop.
z_hop_speed: 5.0
#   Speed (in mm/s) at which the Z axis is lifted prior to homing. Default is 15 mm/s.
# move_to_previous: False
#   When set to True, the X and Y axes are reset to their previous positions after Z axis homing.
#   The default is False.

[bltouch]
sensor_pin: ^PB1
control_pin: PB0
x_offset: -41.9
y_offset: -4.9
z_offset: -1.92
speed: 5.0
sample_retract_dist: 8.0
samples: 2

[bed_screws]
screw1: 70.5,37.5
screw1_name: front left screw
screw2: 200,37.5
screw2_name: front right screw
screw3: 200,207.5
screw3_name: rear right screw
screw4: 70.5,207.5
screw4_name: rear left screw
horizontal_move_z: 10

[screws_tilt_adjust]
screw1: 70.5,37.5
screw1_name: front left screw
screw2: 200,37.5
screw2_name: front right screw
screw3: 200,207.5
screw3_name: rear right screw
screw4: 70.5,207.5
screw4_name: rear left screw
horizontal_move_z: 10
screw_thread: CW-M4

[bed_mesh]
speed: 100 # Speed (mm/s) of non-probing moves during calibration. The default is 50.
mesh_min: 28, 29
#   Defines minimum X, Y coordinate of the mesh for rectangular beds. Relative to the probe's
#   location. Will be the first point probed, nearest to origin. Required for rectangular beds.
mesh_max: 185, 205
#   Defines maximum X, Y coordinate of the mesh for rectangular beds. Adheres to the same
#   principle as mesh_min, however this will be the furthest point probed from the bed's origin.
#   Required for rectangular beds.
probe_count: 7,7
#   For rectangular beds, this is a comma separate pair of integer values X, Y defining the number
#   of points to probe along each axis. A single value is also valid, in which case that value will
#   be applied to both axes. Default is 3, 3.
algorithm: bicubic
#   The interpolation algorithm to use. May be either "lagrange" or "bicubic". This option will not
#   affect 3x3 grids, which are forced to use lagrange sampling. Default is lagrange.
#### Uses Default / Not Used ####
# horizontal_move_z: 5
#   Height (mm) that head should be commanded to move to just prior to starting a probe operation.
#   Default 5.
# fade_start: 1.0
#   Gcode Z position in which to start phasing out z-adjustment when fade is enabled. Default 1.0.
# fade_end: 0.0
#   Gcode Z position in which phasing out completes. When set to a value below fade_start, fade is
#   disabled. Note that fade may add unwanted scaling along the z-axis of a print. If a user wishes
#   to enable fade, a value of 10.0 is recommended. Default is 0.0, which disables fade.
# fade_target:
#   Z position in which fade should converge. When value is set to a non-zero value it must be
#   within the range of z-values in the mesh. Users that wish to converge to the z homing position
#   should set this to 0. Default is the average z value of the mesh.
# split_delta_z: .025
#   Amount of Z difference (mm) along a move that will trigger a split. Default is .025.
# move_check_distance: 5.0
#   Distance (mm) along a move to check for split_delta_z. This is also the minimum length that a
#   move can be split. Default 5.0.
# mesh_pps: 2, 2
#   Comma separated pair of integers X, Y defining the number of points per segment to interpolate
#   in the mesh along each axis. A "segment" can be defined as the space between each probed point.
#   The user may enter a single value which will be applied to both axes. Default 2, 2.
# bicubic_tension: .2
#   When using the bicubic algorithm the tension parameter above may be applied to change the
#   amount of slope interpolated. Larger numbers will increase the amount of slope, which results
#   in more curvature in the mesh. Default .2.
# zero_reference_position:
#   Optional X,Y coordinate that specifies the location on the bed where Z = 0.  When specified
#   the mesh will be offset so that zero Z adjustment occurs at this location.  The default is
#   no zero reference.
# faulty_region_1_min:
# faulty_region_1_max:
#   Optional points that define a faulty region.  See docs/Bed_Mesh.md for details on faulty
#   regions.  Up to 99 faulty regions may be added. By default no faulty regions are set.
# adaptive_margin:
#   An optional margin (in mm) to be added around the bed area used by the defined print objects
#   when generating an adaptive mesh.
# scan_overshoot:
#  The maximum amount of travel (in mm) available outside of the mesh. For rectangular beds this
#  applies to travel on the X axis, and for round beds it applies to the entire radius.  The tool
#  must be able to travel the amount specified outside of the mesh.  This value is used to
#  optimize the travel path when performing a "rapid scan".  The minimum value that may be
#  specified is 1.  The default is no overshoot.

######################################################################
# Filament Runout and Swap 
######################################################################

[pause_resume]
# recover_velocity: 50.0
#   When capture/restore is enabled, the speed at which to return to
#   the captured position (in mm/s). Default is 50.0 mm/s.

[filament_motion_sensor filament_sensor]
detection_length: 7
#   The minimum length of filament pulled through the sensor to trigger
#   a state change on the switch_pin. Default 7 mm.
extruder: extruder # Name of extruder section this sensor is associated with. Required.
pause_on_runout: True
switch_pin: PA4 # Change to switch_pin name according to your motherboard
runout_gcode:
  G91
  G1 Z20 F900
  G90
  G1 X210 Y210 F5000
  G91
  G1 E10 F300
  G1 E20 F150
  G1 E-20 F2400
  G1 E-600 F1600
  G90
insert_gcode:
  G4 P90000
  G91
  G1 E60 F300
  G4 P8000
  resume
#   A list of G-Code commands to execute after a filament insert is
#   detected. See docs/Command_Templates.md for G-Code format. The
#   default is not to run any G-Code commands, which disables insert
#   detection.
# event_delay:
# pause_delay:

######################################################################
# Macros
######################################################################

[output_pin BEEPER_Pin]
pin: PC6
pwm: True
value: 0
shutdown_value: 0
cycle_time: 0.001
scale: 1

[gcode_macro M300]
gcode:
    {% set S = params.S|default(1000)|int %} ; S sets the tone frequency
    {% set P = params.P|default(100)|int %} ; P sets the tone duration
    {% set L = 0.5 %} ; L varies the PWM on time, close to 0 or 1 the tone gets a bit quieter. 0.5 is a symmetric waveform
    {% if S <= 0 %} ; dont divide through zero
    {% set F = 1 %}
    {% set L = 0 %}
    {% elif S >= 10000 %} ;max frequency set to 10kHz
    {% set F = 0 %}
    {% else %}
    {% set F = 1/S %} ;convert frequency to seconds
    {% endif %}
    SET_PIN PIN=BEEPER_Pin VALUE={L} CYCLE_TIME={F} ;Play tone
    G4 P{P} ;tone duration
    SET_PIN PIN=BEEPER_Pin VALUE=0
description: Macro M300

[gcode_macro PAUSE]
description: Pause the actual running print
rename_existing: PAUSE_BASE
# change this if you need more or less extrusion
variable_extrude: 1.0
gcode:
  ##### read E from pause macro #####
  {% set E = printer["gcode_macro PAUSE"].extrude|float %}
  ##### set park positon for x and y #####
  # default is your max posion from your printer.cfg
  {% set x_park = printer.toolhead.axis_maximum.x|float - 5.0 %}
  {% set y_park = printer.toolhead.axis_maximum.y|float - 5.0 %}
  ##### calculate save lift position #####
  {% set max_z = printer.toolhead.axis_maximum.z|float %}
  {% set act_z = printer.toolhead.position.z|float %}
  {% if act_z < (max_z - 2.0) %}
      {% set z_safe = 2.0 %}
  {% else %}
      {% set z_safe = max_z - act_z %}
  {% endif %}
  ##### end of definitions #####
  PAUSE_BASE
  G91
  {% if printer.extruder.can_extrude|lower == 'true' %}
    G1 E-{E} F2100
  {% else %}
    {action_respond_info("Extruder not hot enough")}
  {% endif %}
  {% if "xyz" in printer.toolhead.homed_axes %}
    G1 Z{z_safe} F900
    G90
    G1 X{x_park} Y{y_park} F6000
  {% else %}
    {action_respond_info("Printer not homed")}
  {% endif %} 

[gcode_macro RESUME]
description: Resume the actual running print
rename_existing: RESUME_BASE
gcode:
  ##### read E from pause macro #####
  {% set E = printer["gcode_macro PAUSE"].extrude|float %}
  #### get VELOCITY parameter if specified ####
  {% if 'VELOCITY' in params|upper %}
    {% set get_params = ('VELOCITY=' + params.VELOCITY)  %}
  {%else %}
    {% set get_params = "" %}
  {% endif %}
  ##### end of definitions #####
  {% if printer.extruder.can_extrude|lower == 'true' %}
    G91
    G1 E{E} F2100
  {% else %}
    {action_respond_info("Extruder not hot enough")}
  {% endif %}  
  RESUME_BASE {get_params}

[gcode_macro CANCEL_PRINT]
description: Cancel the actual running print
rename_existing: CANCEL_PRINT_BASE
gcode:
  TURN_OFF_HEATERS
  CLEAR_PAUSE
  CANCEL_PRINT_BASE

[gcode_macro UNLOAD]
default_parameter_E: -320
gcode:
    G91
    G1 E5.0 F1200
    G1 E3.0 F1600
    G1 E-13.14 F7000
    G1 E{E} F3000
    G90
